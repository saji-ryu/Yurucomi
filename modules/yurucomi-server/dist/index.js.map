{"version":3,"sources":["../src/server/index.ts"],"names":["debug","dotenv","load","PORT","Number","process","env","sessionMiddleware","secret","resave","saveUninitialized","cookie","maxAge","app","main","server","options","serveClient","pingTimeout","pingInterval","set","use","express","static","bodyParser","json","urlencoded","extended","routeApi","routeTop","routeLogout","routeLogin","routeSessionCheck","sessionCheck","routeMain","io","socket","next","request","res","yurucomi","Yurucomi","listen","String","NODE_ENV","catch","e","exit"],"mappings":"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","sourcesContent":["import express from \"express\";\nimport dotenv from \"dotenv\";\nimport cors from \"cors\";\nimport bodyParser from \"body-parser\";\nimport cookieParser from \"cookie-parser\";\nimport { createServer, Server } from \"http\";\nimport socketIO from \"socket.io\";\nimport {\n  routeMain,\n  routeApi,\n  routeLogin,\n  routeSessionCheck,\n  routeTop,\n  routeLogout,\n} from \"./routes\";\nimport _debug from \"debug\";\nimport sessionCheck from \"./sessionCheck\";\nimport session from \"express-session\";\nimport Yurucomi from \"./yurucomi\";\n//import Linda from \"./linda\";\n// import settingListener from \"./settingListener\";\n\nconst debug = _debug(\"server:main\");\ndotenv.load();\n\nconst PORT: number = Number(process.env.PORT) || 3000;\nconst sessionMiddleware = session({\n  secret: \"keyboard cat\",\n  resave: false,\n  saveUninitialized: false,\n  cookie: {\n    maxAge: 30 * 60 * 1000,\n  },\n});\nconst app = express();\n\nconst main = async () => {\n  const server = createServer(app);\n  const options = {\n    cookie: false,\n    serveClient: false,\n    pingTimeout: 15000,\n    pingInterval: 13000,\n  };\n  app.set(\"views\", \"views/\");\n  app.set(\"view engine\", \"pug\");\n  app.use(express.static(\"public/\"));\n  app.use(bodyParser.json());\n  app.use(\n    bodyParser.urlencoded({\n      extended: true,\n    })\n  );\n  app.use(cookieParser());\n\n  app.use(cors());\n  app.use(express.static(\"public\"));\n  app.use(sessionMiddleware);\n\n  app.use(\"/_api\", routeApi);\n  app.use(\"/\", routeTop);\n  app.use(\"/_logout\", routeLogout);\n  app.use(\"/_login\", routeLogin);\n  app.use(\"/_sessioncheck\", routeSessionCheck);\n  app.use(\"/\", sessionCheck, routeMain);\n\n  const io = socketIO(server, options);\n  io.use((socket, next) => {\n    sessionMiddleware(socket.request, socket.request.res || {}, next);\n  });\n  const yurucomi = new Yurucomi(io);\n  yurucomi.listen();\n  // settingListener(io);\n\n  app.set(\"yurucomi\", yurucomi);\n  app.set(\"io\", io);\n\n  server.listen(PORT, async () => {\n    debug(`Yurucomi server listen on :${PORT}`);\n    debug(`process.env.NODE_ENV=${String(process.env.NODE_ENV)}`);\n  });\n};\n\nmain().catch(e => {\n  debug(`error:${e}`);\n  process.exit(1);\n});\n\nexport default app;\n"],"file":"index.js"}