{"version":3,"sources":["../src/server/settingUpdater.ts"],"names":["updater","data","_from","undefined","validatedData","Object","entries","_payload","map","ele","key","value","date","Date","now","userSettings","_where","settings","assign","d","index","findIndex","splice","unshift"],"mappings":";;;;;;;AACA;;;;;;;;;;AAEA,IAAMA,OAAO;AAAA;AAAA;AAAA,+BAAG,WAAOC,IAAP,EAA4B;AAC1C,QAAIA,IAAI,CAACC,KAAL,KAAeC,SAAnB,EAA8B;AAC5BF,MAAAA,IAAI,CAACC,KAAL,GAAa,SAAb;AACD;;AACD,QAAME,aAAa,SAASC,MAAM,CAACC,OAAP,CAAeL,IAAI,CAACM,QAApB,EAA8BC,GAA9B,CAAkC,UAAAC,GAAG,EAAI;AACnE,aAAO;AAAEC,QAAAA,GAAG,EAAED,GAAG,CAAC,CAAD,CAAV;AAAeE,QAAAA,KAAK,EAAEF,GAAG,CAAC,CAAD,CAAzB;AAA8BG,QAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AAApC,OAAP;AACD,KAF2B,CAA5B;;AAIA,QAAI,CAACC,sBAAad,IAAI,CAACe,MAAlB,CAAL,EAAgC;AAC9BD,4BAAad,IAAI,CAACe,MAAlB,IAA4B,EAA5B;AACD;;AACD,QAAI,CAACD,sBAAad,IAAI,CAACe,MAAlB,EAA0Bf,IAAI,CAACC,KAA/B,CAAL,EAA4C;AAC1Ca,4BAAad,IAAI,CAACe,MAAlB,EAA0Bf,IAAI,CAACC,KAA/B,IAAwC,EAAxC;AACD;;AACD,QAAMe,QAAQ,GAAGZ,MAAM,CAACa,MAAP,CAAc,EAAd,EAAkBH,sBAAad,IAAI,CAACe,MAAlB,EAA0Bf,IAAI,CAACC,KAA/B,CAAlB,CAAjB;AAd0C;AAAA;AAAA;;AAAA;AAAA;AAAA,YAejCiB,CAfiC;;AAgBxC,YAAIF,QAAQ,CAACE,CAAC,CAACT,GAAH,CAAZ,EAAqB;AACnB,cAAIU,KAAK,GAAGH,QAAQ,CAACE,CAAC,CAACT,GAAH,CAAR,CAAgBW,SAAhB,CAA0B,UAAAZ,GAAG,EAAI;AAC3C,mBAAOA,GAAG,CAACE,KAAJ,KAAcQ,CAAC,CAACR,KAAvB;AACD,WAFW,CAAZ;;AAGA,cAAIS,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBH,YAAAA,QAAQ,CAACE,CAAC,CAACT,GAAH,CAAR,CAAgBY,MAAhB,CAAuBF,KAAvB,EAA8B,CAA9B;AACD;;AACDH,UAAAA,QAAQ,CAACE,CAAC,CAACT,GAAH,CAAR,CAAgBa,OAAhB,CAAwB;AACtBZ,YAAAA,KAAK,EAAEQ,CAAC,CAACR,KADa;AAEtBC,YAAAA,IAAI,EAAEO,CAAC,CAACP;AAFc,WAAxB;AAID,SAXD,MAWO;AACLK,UAAAA,QAAQ,CAACE,CAAC,CAACT,GAAH,CAAR,GAAkB,CAChB;AACEC,YAAAA,KAAK,EAAEQ,CAAC,CAACR,KADX;AAEEC,YAAAA,IAAI,EAAEO,CAAC,CAACP;AAFV,WADgB,CAAlB;AAMD;AAlCuC;;AAe1C,2BAAcR,aAAd,8HAA6B;AAAA;AAoB5B;AAnCyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoC1CW,0BAAad,IAAI,CAACe,MAAlB,EAA0Bf,IAAI,CAACC,KAA/B,IAAwCe,QAAxC;AACA,+BAAUhB,IAAI,CAACe,MAAf,EAAwBC,QAAxB;AACD,GAtCY;;AAAA,kBAAPjB,OAAO;AAAA;AAAA;AAAA,GAAb;;eAwCeA,O","sourcesContent":["import { InsertData } from \"yurucomi-linda/src/interfaces\";\nimport userSettings from \"./userSettings\";\n\nconst updater = async (data: InsertData) => {\n  if (data._from === undefined) {\n    data._from = \"_unkown\";\n  }\n  const validatedData = await Object.entries(data._payload).map(ele => {\n    return { key: ele[0], value: ele[1], date: Date.now() };\n  });\n\n  if (!userSettings[data._where]) {\n    userSettings[data._where] = {};\n  }\n  if (!userSettings[data._where][data._from]) {\n    userSettings[data._where][data._from] = {};\n  }\n  const settings = Object.assign({}, userSettings[data._where][data._from]);\n  for (let d of validatedData) {\n    if (settings[d.key]) {\n      let index = settings[d.key].findIndex(ele => {\n        return ele.value === d.value;\n      });\n      if (index !== -1) {\n        settings[d.key].splice(index, 1);\n      }\n      settings[d.key].unshift({\n        value: d.value,\n        date: d.date,\n      });\n    } else {\n      settings[d.key] = [\n        {\n          value: d.value,\n          date: d.date,\n        },\n      ];\n    }\n  }\n  userSettings[data._where][data._from] = settings;\n  return { [data._where]: settings };\n};\n\nexport default updater;\n"],"file":"settingUpdater.js"}