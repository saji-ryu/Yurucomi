{"version":3,"sources":["../../src/server/routes/api.ts"],"names":["router","express","Router","debug","get","req","res","yurucomi","app","params","operation","read","tsName","tupleSpaceName","payload","query","data","send","from","_from","session","userName","write","Data","memoryDB","userSettings","post","writeTuple","_time","Date","now"],"mappings":";;;;;;;AAAA;;AAIA;;AACA;;AAGA;;AACA;;;;;;;;;;;;AARA,IAAMA,MAAsB,GAAGC,iBAAQC,MAAR,EAA/B;;AAWA,IAAMC,KAAK,GAAG,qBAAO,eAAP,CAAd;AAEAH,MAAM,CAACI,GAAP,CACE,6BADF;AAAA;AAAA;AAAA,+BAEE,WAAOC,GAAP,EAA6BC,GAA7B,EAAuD;AACrD,QAAMC,QAAkB,GAAGC,eAAIJ,GAAJ,CAAQ,UAAR,CAA3B;;AACA,YAAQC,GAAG,CAACI,MAAJ,CAAWC,SAAnB;AACE,WAAK,MAAL;AACEH,QAAAA,QAAQ,CAACI,IAAT,CACE;AAAEC,UAAAA,MAAM,EAAEP,GAAG,CAACI,MAAJ,CAAWI,cAArB;AAAqCC,UAAAA,OAAO,EAAET,GAAG,CAACU;AAAlD,SADF,EAEE,UAACC,IAAD,EAAyB;AACvBV,UAAAA,GAAG,CAACW,IAAJ,CAASD,IAAT;AACD,SAJH;AAMA;;AACF,WAAK,OAAL;AACE,YAAIE,IAAI,GAAG,IAAX;;AACA,YAAIb,GAAG,CAACU,KAAJ,CAAUI,KAAd,EAAqB;AACnBD,UAAAA,IAAI,GAAGb,GAAG,CAACU,KAAJ,CAAUI,KAAjB;AACA,iBAAOd,GAAG,CAACU,KAAJ,CAAUI,KAAjB;AACD;;AACD,YAAId,GAAG,CAACe,OAAJ,IAAef,GAAG,CAACe,OAAJ,CAAYC,QAA/B,EAAyC;AACvCH,UAAAA,IAAI,GAAGb,GAAG,CAACe,OAAJ,CAAYC,QAAnB;AACD;;AACD,YAAIH,IAAJ,EAAU;AACRX,UAAAA,QAAQ,CAACe,KAAT,CACE;AACER,YAAAA,OAAO,EAAET,GAAG,CAACU,KADf;AAEEH,YAAAA,MAAM,EAAEP,GAAG,CAACI,MAAJ,CAAWI,cAFrB;AAGEK,YAAAA,IAAI,EAAEA;AAHR,WADF,EAME,UAAAK,IAAI,EAAI;AACNjB,YAAAA,GAAG,CAACW,IAAJ,CAASM,IAAT;AACD,WARH;AAUD,SAXD,MAWO;AACLjB,UAAAA,GAAG,CAACW,IAAJ,CAAS,qBAAT;AACD;;AAED;;AACF,WAAK,IAAL;AACEX,QAAAA,GAAG,CAACW,IAAJ,CAASO,wBAASnB,GAAG,CAACI,MAAJ,CAAWI,cAApB,CAAT;AACA;;AACF,WAAK,UAAL;AACEP,QAAAA,GAAG,CAACW,IAAJ,CAASQ,sBAAapB,GAAG,CAACI,MAAJ,CAAWI,cAAxB,CAAT;AACA;;AACF;AACEP,QAAAA,GAAG,CAACW,IAAJ,CAAS,iCAAiCZ,GAAG,CAACI,MAAJ,CAAWC,SAA5C,GAAwD,GAAjE;AACA;AA1CJ;AA4CD,GAhDH;;AAAA;AAAA;AAAA;AAAA;AAmDAV,MAAM,CAAC0B,IAAP,CACE,kBADF;AAAA;AAAA;AAAA,gCAEE,WAAOrB,GAAP,EAA6BC,GAA7B,EAAuD;AACrD;AACA,QAAMqB,UAAiB,qBAClBtB,GAAG,CAACU,KADc;AAErBa,MAAAA,KAAK,EAAEC,IAAI,CAACC,GAAL,EAFc;AAGrBX,MAAAA,KAAK,EAAE;AAHc,MAAvB;;AAKA,UAAMhB,KAAK,uBAAgBwB,UAAhB,EAAX;AACD,GAVH;;AAAA;AAAA;AAAA;AAAA;eAae3B,M","sourcesContent":["import express from \"express\";\nconst router: express.Router = express.Router();\nimport { Tuple } from \"yurucomi-interfaces\";\nimport { ResponseTuple, LindaOperation } from \"../../linda/interfaces\";\nimport _debug from \"debug\";\nimport app from \"../index\";\n\n//debug用\nimport { memoryDB } from \"yurucomi-linda\";\nimport userSettings from \"../userSettings\";\nimport Yurucomi from \"../yurucomi\";\n\nconst debug = _debug(\"server:router\");\n\nrouter.get(\n  \"/:tupleSpaceName/:operation\",\n  async (req: express.Request, res: express.Response) => {\n    const yurucomi: Yurucomi = app.get(\"yurucomi\");\n    switch (req.params.operation) {\n      case \"read\":\n        yurucomi.read(\n          { tsName: req.params.tupleSpaceName, payload: req.query },\n          (data: ResponseTuple) => {\n            res.send(data);\n          }\n        );\n        break;\n      case \"write\":\n        let from = null;\n        if (req.query._from) {\n          from = req.query._from;\n          delete req.query._from;\n        }\n        if (req.session && req.session.userName) {\n          from = req.session.userName;\n        }\n        if (from) {\n          yurucomi.write(\n            {\n              payload: req.query,\n              tsName: req.params.tupleSpaceName,\n              from: from,\n            },\n            Data => {\n              res.send(Data);\n            }\n          );\n        } else {\n          res.send(\"error: no from info\");\n        }\n\n        break;\n      case \"db\":\n        res.send(memoryDB[req.params.tupleSpaceName]);\n        break;\n      case \"settings\":\n        res.send(userSettings[req.params.tupleSpaceName]);\n        break;\n      default:\n        res.send('There is no operation like \"' + req.params.operation + '\"');\n        break;\n    }\n  }\n);\n\nrouter.post(\n  \"/:tupleSpaceName\",\n  async (req: express.Request, res: express.Response) => {\n    // FIXME:本来_fromをここで計算\n    const writeTuple: Tuple = {\n      ...req.query,\n      _time: Date.now(),\n      _from: \"hoge\",\n    };\n    await debug(`write tuple:${writeTuple}`);\n  }\n);\n\nexport default router;\n"],"file":"api.js"}