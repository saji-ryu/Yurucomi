{"version":3,"sources":["../../src/server/routes/login.ts"],"names":["router","express","Router","debug","post","req","res","body","userName","groupName","session","response","axios","get","userList","data","pages","map","ele","title","toLowerCase","index","findIndex","goupNaem","json","result","name","render"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;AAFA,IAAMA,MAAsB,GAAGC,iBAAQC,MAAR,EAA/B;;AAGA,IAAMC,KAAK,GAAG,qBAAO,qBAAP,CAAd;AAEAH,MAAM,CAACI,IAAP,CAAY,GAAZ;AAAA;AAAA;AAAA,+BAAiB,WAAOC,GAAP,EAA6BC,GAA7B,EAAuD;AACtE,QAAID,GAAG,CAACE,IAAJ,CAASC,QAAT,IAAqBH,GAAG,CAACE,IAAJ,CAASE,SAAlC,EAA6C;AAC3C,UAAIJ,GAAG,CAACK,OAAR,EAAiB;AACf,YAAMC,QAAQ,SAASC,eAAMC,GAAN,CACrB,wCADqB,CAAvB;AAGA,YAAMC,QAAuB,GAAGH,QAAQ,CAACI,IAAT,CAAcC,KAAd,CAAoBC,GAApB,CAC9B,UAACC,GAAD,EAAiC;AAC/B,iBAAOA,GAAG,CAACC,KAAJ,CAAUC,WAAV,EAAP;AACD,SAH6B,CAAhC;AAKA,YAAMC,KAAK,GAAGP,QAAQ,CAACQ,SAAT,CAAmB,UAAAJ,GAAG,EAAI;AACtC,iBAAOA,GAAG,KAAKb,GAAG,CAACE,IAAJ,CAASC,QAAxB;AACD,SAFa,CAAd;;AAGA,YAAIa,KAAK,IAAI,CAAb,EAAgB;AACdhB,UAAAA,GAAG,CAACK,OAAJ,CAAYF,QAAZ,GAAuBH,GAAG,CAACE,IAAJ,CAASC,QAAhC;AACAH,UAAAA,GAAG,CAACK,OAAJ,CAAYD,SAAZ,GAAwBJ,GAAG,CAACE,IAAJ,CAASgB,QAAjC;AACApB,UAAAA,KAAK,CAAC,eAAD,CAAL;AACAG,UAAAA,GAAG,CAACkB,IAAJ,CAAS;AAAEC,YAAAA,MAAM,EAAE,IAAV;AAAgBC,YAAAA,IAAI,EAAErB,GAAG,CAACE,IAAJ,CAASC;AAA/B,WAAT;AACD,SALD,MAKO;AACLF,UAAAA,GAAG,CAACkB,IAAJ,CAAS;AAAEC,YAAAA,MAAM,EAAE,KAAV;AAAiBC,YAAAA,IAAI,EAAE;AAAvB,WAAT;AACD;AACF,OApBD,MAoBO;AACLvB,QAAAA,KAAK,CAAC,cAAD,CAAL;AACAG,QAAAA,GAAG,CAACkB,IAAJ,CAAS;AAAEC,UAAAA,MAAM,EAAE,KAAV;AAAiBC,UAAAA,IAAI,EAAE;AAAvB,SAAT;AACD;AACF,KAzBD,MAyBO;AACLvB,MAAAA,KAAK,CAAC,cAAD,CAAL;AACAG,MAAAA,GAAG,CAACkB,IAAJ,CAAS;AAAEC,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,IAAI,EAAE;AAAvB,OAAT;AACD;AACF,GA9BD;;AAAA;AAAA;AAAA;AAAA;AAgCA1B,MAAM,CAACa,GAAP,CAAW,UAAX,EAAuB,UAACR,GAAD,EAAuBC,GAAvB,EAAiD;AACtEA,EAAAA,GAAG,CAACqB,MAAJ,CAAW,OAAX;AACD,CAFD;AAGA3B,MAAM,CAACa,GAAP,CAAW,GAAX,EAAgB,UAACR,GAAD,EAAuBC,GAAvB,EAAiD;AAC/DA,EAAAA,GAAG,CAACqB,MAAJ,CAAW,OAAX;AACD,CAFD;eAIe3B,M","sourcesContent":["import express from \"express\";\nconst router: express.Router = express.Router();\nimport axios from \"axios\";\nimport _debug from \"debug\";\nconst debug = _debug(\"server:router/login\");\n\nrouter.post(\"/\", async (req: express.Request, res: express.Response) => {\n  if (req.body.userName && req.body.groupName) {\n    if (req.session) {\n      const response = await axios.get(\n        \"https://scrapbox.io/api/pages/yurucomi\"\n      );\n      const userList: Array<string> = response.data.pages.map(\n        (ele: { [key: string]: any }) => {\n          return ele.title.toLowerCase();\n        }\n      );\n      const index = userList.findIndex(ele => {\n        return ele === req.body.userName;\n      });\n      if (index >= 0) {\n        req.session.userName = req.body.userName;\n        req.session.groupName = req.body.goupNaem;\n        debug(\"login success\");\n        res.json({ result: true, name: req.body.userName });\n      } else {\n        res.json({ result: false, name: null });\n      }\n    } else {\n      debug(\"login failed\");\n      res.json({ result: false, name: null });\n    }\n  } else {\n    debug(\"login failed\");\n    res.json({ result: false, name: null });\n  }\n});\n\nrouter.get(\"/:tsName\", (req: express.Request, res: express.Response) => {\n  res.render(\"index\");\n});\nrouter.get(\"/\", (req: express.Request, res: express.Response) => {\n  res.render(\"index\");\n});\n\nexport default router;\n"],"file":"login.js"}